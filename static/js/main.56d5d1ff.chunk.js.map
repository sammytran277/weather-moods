{"version":3,"sources":["Header/logo.svg","Home/WeatherContainer/WeatherCard/icons/cloudy.svg","serviceWorker.js","Header/Header.js","Home/SearchContainer/SearchContainer.js","Footer/Footer.js","Home/WeatherContainer/WeatherCard/WeatherCard.js","Home/WeatherContainer/WeatherContainer.js","Home/Home.js","About/About.js","Contact/Contact.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Header","Navbar","className","expand","Brand","href","process","src","logo","alt","width","height","Text","Toggle","aria-controls","Collapse","id","Nav","Link","GENRES","SearchContainer","Form","Group","Label","Control","as","map","genre","key","InputGroup","type","placeholder","Append","icon","faSearch","Footer","target","rel","faGithub","color","data","WeatherCard","Card","cloudy","WeatherContainer","CardGroup","Home","About","Contact","ReactDOM","render","basename","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.56d5d1ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e5f2b478.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.add62541.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport './Header.css';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport logo from \"./logo.svg\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Navbar className=\"custom-header\" expand=\"lg\">\r\n      <Navbar.Brand href={process.env.PUBLIC_URL + \"/\"}>\r\n        <img src={logo} alt=\"Weather Moods logo\" width=\"40\" height=\"40\"></img>\r\n        <Navbar.Text className=\"text-white ml-3\">Weather Moods</Navbar.Text>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"ml-auto\">\r\n          <Nav.Link className=\"text-white\" href={process.env.PUBLIC_URL + \"/\"}>Home</Nav.Link>\r\n          <Nav.Link className=\"text-white\" href={process.env.PUBLIC_URL + \"/about\"}>About</Nav.Link>\r\n          <Nav.Link className=\"text-white\" href={process.env.PUBLIC_URL + \"/contact\"}>Contact</Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './SearchContainer.css';\r\nimport { Form, InputGroup } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst GENRES = [\r\n  'All Genres',\r\n  'Hip-Hop', \r\n  'Pop', \r\n  'Techno', \r\n  'R&B', \r\n  'Punk', \r\n  'Country', \r\n  'Indie', \r\n  'Latin', \r\n  'Jazz',\r\n  'Christian'\r\n];\r\n\r\nconst SearchContainer = () => {\r\n  return (\r\n    <div className=\"search-container\">\r\n      <h1 className=\"text-white mb-5 text-center\">Need music based on the weather?</h1>\r\n      <Form>\r\n        <Form.Group>\r\n          <Form.Label className=\"text-white\">\r\n            1. Select your music genre\r\n          </Form.Label>\r\n          <Form.Control as=\"select\">\r\n            {GENRES.map(genre => <option key={genre}>{genre}</option>)}\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label className=\"text-white\">2. Enter your city</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control type=\"text\" placeholder=\"City\"></Form.Control>\r\n            <InputGroup.Append className=\"magnifying-glass-container\">\r\n              <InputGroup.Text>\r\n                <FontAwesomeIcon icon={faSearch} />\r\n              </InputGroup.Text>\r\n            </InputGroup.Append>\r\n          </InputGroup>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchContainer;","import React from 'react';\r\nimport './Footer.css';\r\nimport { Navbar } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Navbar \r\n      className=\"custom-footer justify-content-center\" \r\n      expand=\"lg\"\r\n    >\r\n      <Navbar.Text className=\"text-white\">\r\n        Made with <span className=\"heart\">&hearts;</span> by Sammy Tran\r\n        <a \r\n          href=\"https://github.com/sammytran277/weather-moods\" \r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <FontAwesomeIcon className=\"ml-2\" icon={faGithub} color=\"white\" />\r\n        </a>\r\n      </Navbar.Text>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport './WeatherCard.css';\r\nimport { Card } from 'react-bootstrap';\r\nimport cloudy from './icons/cloudy.svg';\r\n\r\nconst data = {\r\n  avg: 70,\r\n  low: 60,\r\n  high: 80\r\n};\r\n\r\nconst WeatherCard = () => {\r\n  return (\r\n    <Card className=\"weather-card\">\r\n      <div className=\"weather-icon\">\r\n        <img src={cloudy} alt=\"cloudy\" height=\"50\" width=\"50\"></img>\r\n      </div>\r\n      <div className=\"temp-container\">\r\n        <div className=\"temp-avg\">{data.avg}</div>\r\n        <div className=\"temp-extrema\">\r\n          <div className=\"temp-low\">Low: {data.low}</div>\r\n          <div className=\"temp-high ml-2\">High: {data.high}</div>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default WeatherCard;","import React from 'react';\r\nimport './WeatherContainer.css';\r\nimport { CardGroup } from 'react-bootstrap';\r\nimport WeatherCard from './WeatherCard/WeatherCard';\r\n\r\nconst WeatherContainer = () => {\r\n  return (\r\n    <CardGroup className=\"weather-container\">\r\n      <WeatherCard />\r\n      <WeatherCard />\r\n      <WeatherCard />\r\n      <WeatherCard />\r\n      <WeatherCard />\r\n    </CardGroup>\r\n  );\r\n}\r\n\r\nexport default WeatherContainer;\r\n","import React from 'react';\r\nimport './Home.css';\r\nimport Header from '../Header/Header';\r\nimport SearchContainer from './SearchContainer/SearchContainer';\r\nimport Footer from '../Footer/Footer';\r\nimport WeatherContainer from './WeatherContainer/WeatherContainer';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <SearchContainer />\r\n      <WeatherContainer />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport './About.css';\r\nimport Header from '../Header/Header';\r\nimport Footer from '../Footer/Footer';\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <h1>ABOUT PAGE</h1>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport './Contact.css';\r\nimport Header from '../Header/Header';\r\nimport Footer from '../Footer/Footer';\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <h1>CONTACT</h1>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contact;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Home from './Home/Home';\nimport About from './About/About';\nimport Contact from './Contact/Contact';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <Route exact path=\"/\" component={Home} />\n    <Route path=\"/about\" component={About} />\n    <Route path=\"/contact\" component={Contact} />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}